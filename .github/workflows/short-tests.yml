# This is a basic workflow to help you get started with Actions

name: Short Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the mydev branch
  push:
    branches-ignore:
      - "gh-readonly-queue**"
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:  
  SASS-Simulation:
    runs-on: ubuntu-latest
    container:
      image: tgrogers/accel-sim_regress:Ubuntu-22.04-cuda-11.7
      # env:
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run Simulation
        run: /bin/bash $GITHUB_WORKSPACE/short-tests.sh
  PTX-Simulation:
    runs-on: ubuntu-latest
      # env:
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run Simulation
        run: echo "skipped PTX-Simulation. Will perform in merge queue"
  Tracer-Tool:
    runs-on: ubuntu-latest
      # env:
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Run Simulation
        run: echo "skipped Tracer-Simulation. Will perform in merge queue"
  format-code:
    runs-on: ubuntu-latest
    needs: [SASS-Simulation, PTX-Simulation, Tracer-Tool]

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - uses: actions/checkout@v4
      # Other steps that change files in the repository go here
      # â€¦
      - name: Run clang-format
        run: |
          sudo apt-get install -y clang-format
          ./gpu-simulator/format-code.sh
          ./util/tracer_nvbit/tracer_tool/format-code.sh

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # Optional. Commit message for the created commit.
          # Defaults to "Apply automatic changes"
          commit_message: Automated clang-format
          # Optional. Option used by `git-status` to determine if the repository is 
          # dirty. See https://git-scm.com/docs/git-status#_options
          status_options: '--untracked-files=no'